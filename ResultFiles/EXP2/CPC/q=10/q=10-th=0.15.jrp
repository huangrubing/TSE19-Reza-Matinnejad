New Table( "avgmuts 2 2 2", 	Add Rows( 176 ), 	New Script( 		"Source", 		Open( 			"/Users/reza.matinnejad/Desktop/Scripts/Out/O1/avgmuts.dat", 			columns( 				Column( "tech", Character, "Nominal" ), 				Column( "avg", Numeric, "Continuous", Format( "Best", 10 ) ) 			), 			Import Settings( 				End Of Line( CRLF, CR, LF ), 				End Of Field( Tab, Space, Comma, CSV( 0 ) ), 				Strip Quotes( 1 ), 				Use Apostrophe as Quotation Mark( 0 ), 				Scan Whole File( 1 ), 				Treat empty columns as numeric( 0 ), 				CompressNumericColumns( 0 ), 				CompressCharacterColumns( 0 ), 				CompressAllowListCheck( 0 ), 				Labels( 1 ), 				Column Names Start( 1 ), 				Data Starts( 2 ), 				Lines To Read( "All" ), 				Year Rule( "20xx" ) 			) 		) 	), 	New Column( "tech", 		Character, 		"Nominal", 		Set Values( 			{"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", 			"4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "4.PrioAlg", "3.Add", "3.Add", 			"3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", 			"3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", 			"3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", 			"3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", 			"3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", "3.Add", 			"3.Add", "3.Add", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", 			"2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", 			"2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", 			"2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", 			"2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", 			"2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "2.Tot", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random", "1.Random", "1.Random", "1.Random", "1.Random", "1.Random", 			"1.Random"} 		) 	), 	New Column( "avgnew", 		Numeric, 		"Continuous", 		Format( "Best", Use thousands separator( 1 ), 20 ), 		Set Values( 			[1.6, 2.75, 2.75, 2.85, 11.6667, 18.4444, 7, 7.6316, 7.6316, 2.55, 			12.4706, 8.0526, 9.5882, 8.0526, 2.2632, 15.2667, 2.2, 3.65, 17.35, ., 			8.0526, 2.25, 27.7, 9.0625, 2.65, 10.75, 15.0625, 8.25, 3.65, 3.65, 3.65, 			3.65, 2.3, 8.0526, 2.7, 2.2, 1.95, 7.35, 1.95, 8.9286, 12.1053, 22.2105, 			15.05, 8.0526, 2.65, 5.6, 5.85, 4.3, 22.3333, 25.0556, 16.6667, 24.5263, 			24.8421, 2.95, 28.3529, 23.8421, 21.1176, 23.8421, 3.6316, 39, 2.6, 3.95, 			19.9, ., 23.8421, 3.25, 30.6, 25.1875, 9.05, 30.6875, 33.25, 14.8, 3.95, 			3.95, 3.95, 3.95, 3.3, 23.8421, 4.5, 4.6, 2, 8.1, 2.9, 30.7857, 27.5263, 			29.6842, 15.4, 23.8421, 3.45, 11.45, 10.3, 9.05, 27.7778, 37.5, 28.5, 			33.7368, 35.6842, 6.75, 40.7647, 32.1053, 29.8824, 32.1053, 7.6316, 			49.2667, 5.35, 5.85, 26.4, ., 32.1053, 5.1, 50.2, 36.875, 10.85, 41.25, 			44.125, 25.9, 5.85, 5.85, 5.85, 5.85, 6.25, 32.1053, 7.6, 7, 2.7, 13.6, 			4.4, 41.3571, 33.4737, 43.4737, 21.8, 32.1053, 9.8675, 37.55, 31.99, 			21.52, 73.425, 79.2222, 85.2167, 92.6211, 94.1737, 11.8925, 92.5088, 			94.4632, 79.0794, 94.4632, 59.2158, 98.83, 10.865, 12.0275, 57.6975, ., 			94.4632, 9.625, 68.4175, 86.0687, 51.2825, 88.6812, 97.875, 50.35, 			12.0275, 12.0275, 12.0275, 12.0275, 15.7675, 94.4632, 24.6275, 23.745, 			22.3075, 35.865, 10.0475, 84.3643, 80.8026, 70.0816, 66.04, 94.4632] 		) 	), 	Set Row States( 		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] 	) ); Oneway( 	Y( :avgnew ), 	X( :tech ), 	Means( 1 ), 	Box Plots( 1 ), 	Mean Lines( 1 ), 	Mean Diamonds( 1 ), 	Grand Mean( 0 ), 	Wilcoxon Each Pair( 1 ), 	SendToReport( 		Dispatch( 			{}, 			"1", 			ScaleBox, 			{Min( 0 ), Max( 140 ), Inc( 70 ), Minor Ticks( 1 ), 			Label Row( Show Minor Ticks( 0 ) )} 		), 		Dispatch( 			{}, 			"Oneway Plot", 			FrameBox, 			{Frame Size( 196, 218 ), DispatchSeg( 				CustomStreamSeg( 3 ), 				{Line Width( 2 )} 			), DispatchSeg( 				Box Plot Seg( 1 ), 				{Box Type( "Outlier" ), Line Color( "Red" ), Line Width( 2 )} 			), DispatchSeg( 				Box Plot Seg( 2 ), 				{Box Type( "Outlier" ), Line Color( "Red" ), Line Width( 2 )} 			)} 		), 		Dispatch( {}, "", NomAxisBox, {"Off"} ) 	) );